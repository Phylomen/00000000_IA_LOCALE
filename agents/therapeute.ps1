#Requires -Version 5.1
<#
.SYNOPSIS
    Agent th√©rapeutique - Conseils et assistance
.DESCRIPTION
    Agent sp√©cialis√© dans l'accompagnement th√©rapeutique ludique.
.PARAMETER Message
    Message ou requ√™te de l'utilisateur
#>

param(
    [Parameter(Mandatory=$false)]
    [string]$Message = "Bonjour"
)

# Chemin pour les donn√©es
$DataPath = Join-Path $PSScriptRoot "..\data"

# Fonction principale de l'agent
function Invoke-TherapeuticResponse {
    param([string]$Input)
    
    Write-Host "üåü Agent Th√©rapeute activ√© üåü"
    Write-Host "Message re√ßu : $Input"
    
    # R√©ponses th√©rapeutiques simples
    $Responses = @(
        "Je suis l√† pour vous √©couter. Comment vous sentez-vous aujourd'hui ?",
        "Chaque jour est une nouvelle opportunit√© de croissance.",
        "Vos √©motions sont valides et importantes.",
        "Prenez un moment pour respirer profond√©ment.",
        "Vous faites de votre mieux, et c'est ce qui compte."
    )
    
    # S√©lectionner une r√©ponse al√©atoire
    $Response = $Responses | Get-Random
    
    Write-Host "R√©ponse : $Response"
    
    # Enregistrer l'interaction dans les donn√©es
    $Interaction = @{
        Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        Agent = "therapeute"
        Message = $Input
        Response = $Response
    }
    
    $DataFile = Join-Path $DataPath "interactions.json"
    
    # Charger les interactions existantes
    $AllInteractions = [System.Collections.ArrayList]@()
    if (Test-Path $DataFile) {
        $JsonContent = Get-Content $DataFile -Raw | ConvertFrom-Json
        if ($JsonContent) {
            if ($JsonContent -is [array]) {
                $AllInteractions.AddRange($JsonContent)
            } else {
                $AllInteractions.Add($JsonContent) | Out-Null
            }
        }
    }
    
    # Ajouter la nouvelle interaction
    $AllInteractions.Add($Interaction) | Out-Null
    
    # Sauvegarder
    $AllInteractions | ConvertTo-Json | Set-Content $DataFile
    
    return $Response
}

# Ex√©cuter l'agent
Invoke-TherapeuticResponse -Input $Message
